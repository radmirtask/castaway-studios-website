---
import Layout from '../layouts/Layout.astro';
import captainSrc from '../../public/home/hero/Captain_Bootycall.png';
import captainMobileSrc from '../../public/home/hero/Captain_BootycallMobile.png';
import bgSrc from '../../public/home/hero/BG.png';
import ctaSrc from '../../public/home/hero/Business_button.png';
import ctaMobileSrc from '../../public/home/hero/Business_buttonMobile.png';
import game1Src from '../../public/home/games/Elarion.mp4';
import game3Src from '../../public/home/games/Elarion2.mp4';
import game4Src from '../../public/home/games/Elarion3.mp4';
import game5Src from '../../public/home/games/RealmsOfShadowArenaQuestTrailer.mp4';
import arrowSrc from '../../public/home/games/arrow.png';
import rectangleSrc from '../../public/home/games/rectangle below arrow.png';
import arrowsBgSrc from '../../public/home/statsAbout/arrows.jpg';
import stat1Src from '../../public/home/statsAbout/1. Active Projects.png';
import stat2Src from '../../public/home/statsAbout/2. Years Experience.png';
import stat3Src from '../../public/home/statsAbout/3. Team Members.png';
import aboutBgSrc from '../../public/home/who/BG.png';
import './home/home.css'; 
import DevelopmentPath from '../components/DevelopmentPath/DevelopmentPath.jsx';
import GameCarousel from '../components/Carusel/GameCarousel.jsx';

---

<Layout title="Home — Castaway Studios">
  <main>
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero__bg" style={`background-image: url(${bgSrc.src});`}></div>
      <div class="hero__content">
        <div class="hero__text">
          <h1 class="hero__headline">CRAFTING FUN, PIRATE STYLE.</h1>
          <a href="/contactUs" class="hero__button-link">
            <picture>
              <source srcset={ctaSrc.src} media="(min-width: 1024px)" />
              <img 
                src={ctaMobileSrc.src} 
                alt="TALK BUSINESS" 
                class="hero__business-button" 
                draggable="false" 
              />
            </picture>
          </a>
          <p class="hero__description">
            Our games are built for grown-ups who refuse to grow up—packed with sharp wit, bold worlds, and just the right amount of trouble.
          </p>
        </div>
        <picture>
          <source srcset={captainMobileSrc.src} media="(max-width: 767px)" />
          <img 
            src={captainSrc.src} 
            alt="Captain Bootycall character" 
            class="hero__pirate-image" 
            draggable="false" 
          />
        </picture>
      </div>
      <div></div>
    </section>
    
    <!-- Game Collection Section -->
    <section class="game-collection">
      <div class="floating-particles" id="particles"></div>
    
    <div class="carousel-container">
        <div class="carousel-header">
            <h1 class="carousel-title">Our Game Collection</h1>
            <p class="carousel-subtitle">Immersive experiences that refuse to grow up—packed with sharp wit, bold worlds, and just the right amount of trouble.</p>
        </div>

        <div class="carousel-wrapper">
            <div class="carousel-track" id="carouselTrack">
                <!-- Game Card 1 -->
                <div class="game-card">
                    <div class="card-video-container">
                        <video class="card-video" muted loop>
                            <source src={game1Src} type="video/mp4">
                        </video>
                        <div class="video-overlay">
                            <div class="play-button"></div>
                        </div>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">ELARION</h3>
                        <p class="card-description">Step into a magical world where you're discovering locations and fighting all the different creatures of this world</p>
                        <div class="card-tags">
                            <span class="tag">Open World</span>
                            <span class="tag">Adventure</span>
                            <span class="tag">RPG</span>
                        </div>
                        <button class="card-button">Play Now</button>
                    </div>
                </div>

                <!-- Game Card 2 -->
                <div class="game-card">
                  <div class="card-video-container">
                      <video class="card-video" muted loop>
                          <source src="https://via.placeholder.com/400x600/7c2d12/ffffff.mp4" type="video/mp4">
                      </video>
                      <div class="video-overlay">
                          <div class="play-button"></div>
                      </div>
                  </div>
                  <div class="card-content">
                      <h3 class="card-title">Puppy Collector</h3>
                      <p class="card-description">Collect Cute Puppies and relax </p>
                      <div class="card-tags">
                          <span class="tag">Casual</span>
                          <span class="tag">Puzzle</span>
                          <span class="tag">Relaxing</span>
                      </div>
                      <button class="card-button">Play Now</button>
                  </div>
              </div>

                <!-- Game Card 3 -->
                <div class="game-card">
                  <div class="card-video-container">
                      <video class="card-video" muted loop>
                          <source src={game3Src} type="video/mp4">
                      </video>
                      <div class="video-overlay">
                          <div class="play-button"></div>
                      </div>
                  </div>
                  <div class="card-content">
                    <h3 class="card-title">ELARION</h3>
                    <p class="card-description">Step into a magical world where you're discovering locations and fighting all the different creatures of this world</p>
                    <div class="card-tags">
                        <span class="tag">Open World</span>
                        <span class="tag">Adventure</span>
                        <span class="tag">RPG</span>
                    </div>
                      <button class="card-button">Play Now</button>
                  </div>
              </div>
                <!-- Game Card 4 -->
                <div class="game-card">
                    <div class="card-video-container">
                        <video class="card-video" muted loop>
                            <source src={game4Src} type="video/mp4">
                        </video>
                        <div class="video-overlay">
                            <div class="play-button"></div>
                        </div>
                    </div>
                    <div class="card-content">
                      <h3 class="card-title">ELARION</h3>
                      <p class="card-description">Step into a magical world where you're discovering locations and fighting all the different creatures of this world</p>
                      <div class="card-tags">
                          <span class="tag">Open World</span>
                          <span class="tag">Adventure</span>
                          <span class="tag">RPG</span>
                      </div>
                        <button class="card-button">Play Now</button>
                    </div>
                </div>

                <!-- Game Card 5 -->
                <div class="game-card">
                    <div class="card-video-container">
                        <video class="card-video" muted loop>
                            <source src={game5Src} type="video/mp4">
                        </video>
                        <div class="video-overlay">
                            <div class="play-button"></div>
                        </div>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">ARENA QUEST</h3>
                        <p class="card-description">Defeat Enemis, Endless Action</p>
                        <div class="card-tags">
                            <span class="tag">RPG</span>
                            <span class="tag">Adventure</span>
                            <span class="tag">Exploration</span>
                        </div>
                        <button class="card-button">Play Now</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="carousel-controls">
            <button class="control-button" id="prevBtn">‹</button>
            <button class="control-button" id="nextBtn">›</button>
        </div>

        <div class="carousel-indicators" id="indicators"></div>
    </div>
    <script>
      class GameCarousel {
          constructor() {
              this.track = document.getElementById('carouselTrack');
              this.cards = document.querySelectorAll('.game-card');
              this.prevBtn = document.getElementById('prevBtn');
              this.nextBtn = document.getElementById('nextBtn');
              this.indicators = document.getElementById('indicators');
              
              this.currentIndex = 0;
              this.cardsPerView = this.getCardsPerView();
              this.totalCards = this.cards.length;
              this.maxIndex = Math.max(0, this.totalCards - this.cardsPerView);
              
              this.init();
          }

          init() {
              this.createIndicators();
              this.updateCarousel();
              this.bindEvents();
              this.createFloatingParticles();
              this.autoPlayVideos();
              this.setupVideoHandlers();
              
              // Responsive handling
              window.addEventListener('resize', () => {
                  this.cardsPerView = this.getCardsPerView();
                  this.maxIndex = Math.max(0, this.totalCards - this.cardsPerView);
                  this.currentIndex = Math.min(this.currentIndex, this.maxIndex);
                  this.updateCarousel();
              });
          }

          getCardsPerView() {
              if (window.innerWidth <= 768) return 1;
              if (window.innerWidth <= 1024) return 2;
              return 3;
          }

          createIndicators() {
              this.indicators.innerHTML = '';
              const totalSlides = this.maxIndex + 1;
              
              for (let i = 0; i < totalSlides; i++) {
                  const indicator = document.createElement('div');
                  indicator.classList.add('indicator');
                  if (i === 0) indicator.classList.add('active');
                  indicator.addEventListener('click', () => this.goToSlide(i));
                  this.indicators.appendChild(indicator);
              }
          }

          bindEvents() {
              this.prevBtn.addEventListener('click', () => this.prevSlide());
              this.nextBtn.addEventListener('click', () => this.nextSlide());
              
              // Touch/swipe support
              let startX = 0;
              let isDragging = false;
              
              this.track.addEventListener('touchstart', (e) => {
                  startX = e.touches[0].clientX;
                  isDragging = true;
              });
              
              this.track.addEventListener('touchmove', (e) => {
                  if (!isDragging) return;
                  e.preventDefault();
              });
              
              this.track.addEventListener('touchend', (e) => {
                  if (!isDragging) return;
                  isDragging = false;
                  
                  const endX = e.changedTouches[0].clientX;
                  const diff = startX - endX;
                  
                  if (Math.abs(diff) > 50) {
                      if (diff > 0) {
                          this.nextSlide();
                      } else {
                          this.prevSlide();
                      }
                  }
              });

              // Keyboard navigation
              document.addEventListener('keydown', (e) => {
                  if (e.key === 'ArrowLeft') this.prevSlide();
                  if (e.key === 'ArrowRight') this.nextSlide();
              });
          }

          prevSlide() {
              if (this.currentIndex > 0) {
                  this.currentIndex--;
                  this.updateCarousel();
              }
          }

          nextSlide() {
              if (this.currentIndex < this.maxIndex) {
                  this.currentIndex++;
                  this.updateCarousel();
              }
          }

          goToSlide(index) {
              this.currentIndex = Math.max(0, Math.min(index, this.maxIndex));
              this.updateCarousel();
          }

          updateCarousel() {
              const cardWidth = this.cards[0].offsetWidth + 30; // including gap
              const offset = -this.currentIndex * cardWidth;
              
              this.track.style.transform = `translateX(${offset}px)`;
              
              // Update buttons
              this.prevBtn.disabled = this.currentIndex === 0;
              this.nextBtn.disabled = this.currentIndex === this.maxIndex;
              
              // Update indicators
              document.querySelectorAll('.indicator').forEach((indicator, index) => {
                  indicator.classList.toggle('active', index === this.currentIndex);
              });
          }

          autoPlayVideos() {
              this.cards.forEach(card => {
                  const video = card.querySelector('.card-video');
                  if (video) {
                      video.addEventListener('loadeddata', () => {
                          video.play().catch(() => {
                              // Fallback for browsers that don't allow autoplay
                              console.log('Autoplay prevented');
                          });
                      });
                  }
              });
          }

          createFloatingParticles() {
              const particlesContainer = document.getElementById('particles');
              if (!particlesContainer) return;
              
              const particleCount = 20;
              
              for (let i = 0; i < particleCount; i++) {
                  const particle = document.createElement('div');
                  particle.classList.add('particle');
                  
                  // Random size and position
                  const size = Math.random() * 6 + 2;
                  particle.style.width = `${size}px`;
                  particle.style.height = `${size}px`;
                  particle.style.left = `${Math.random() * 100}%`;
                  particle.style.top = `${Math.random() * 100}%`;
                  particle.style.animationDelay = `${Math.random() * 6}s`;
                  particle.style.animationDuration = `${6 + Math.random() * 4}s`;
                  
                  particlesContainer.appendChild(particle);
              }
          }

          setupVideoHandlers() {
              const isMobile = window.innerWidth <= 768;
              
              document.querySelectorAll('.card-video-container').forEach(container => {
                  const video = container.querySelector('.card-video');
                  if (!video) return;
                  
                  container.style.cursor = 'pointer';
                  container.addEventListener('click', () => {
                      if (isMobile) {
                          this.openVideoFullscreen(video);
                      } else {
                          this.openVideoModal(video);
                      }
                  });
              });
          }

          openVideoFullscreen(video) {
              if (video.requestFullscreen) {
                  video.requestFullscreen();
              } else if (video.webkitRequestFullscreen) {
                  video.webkitRequestFullscreen();
              } else if (video.msRequestFullscreen) {
                  video.msRequestFullscreen();
              }
              video.play();
          }

          openVideoModal(video) {
              const modal = document.createElement('div');
              modal.className = 'video-modal';
              modal.innerHTML = `
                  <div class="video-modal-overlay">
                      <div class="video-modal-content">
                          <button class="video-modal-close">&times;</button>
                          <video class="video-modal-player" controls autoplay>
                              <source src="${video.querySelector('source').src}" type="video/mp4">
                          </video>
                      </div>
                  </div>
              `;
              
              document.body.appendChild(modal);
              document.body.style.overflow = 'hidden';
              
              const closeModal = () => {
                  document.body.removeChild(modal);
                  document.body.style.overflow = '';
              };
              
              modal.querySelector('.video-modal-close').addEventListener('click', closeModal);
              modal.querySelector('.video-modal-overlay').addEventListener('click', (e) => {
                  if (e.target === e.currentTarget) closeModal();
              });
              
              document.addEventListener('keydown', function escapeHandler(e) {
                  if (e.key === 'Escape') {
                      closeModal();
                      document.removeEventListener('keydown', escapeHandler);
                  }
              });
          }
      }

      // Initialize carousel when DOM is loaded
      document.addEventListener('DOMContentLoaded', () => {
          new GameCarousel();
      });

      // Enhanced hover effects
      document.querySelectorAll('.game-card').forEach(card => {
          card.addEventListener('mouseenter', () => {
              const video = card.querySelector('.card-video');
              if (video) {
                  video.play().catch(() => {});
              }
          });

          card.addEventListener('mouseleave', () => {
              const video = card.querySelector('.card-video');
              if (video) {
                  video.pause();
              }
          });
      });
  </script>
    </section>
    
    <!-- Stats About Section -->
    <section class="stats-about">
      <!-- <div class="stats-about__bg"></div> -->
      <img src={arrowsBgSrc.src} alt="arrows" class="stats-about__bg" draggable="false" />
      <div class="stats-about__container">
        <div class="stats-about__items">
          <div class="stats-about__item">
            <div class="stats-about__content">
              <span class="stats-about__number">3+</span>
              <span class="stats-about__label">ACTIVE PROJECTS</span>
            </div>
          </div>
          <div class="stats-about__item">
            <div class="stats-about__content">
              <span class="stats-about__number">2+</span>
              <span class="stats-about__label">YEARS EXPERIENCE</span>
            </div>
          </div>
          <div class="stats-about__item">
            <div class="stats-about__content">
              <span class="stats-about__number">5+</span>
              <span class="stats-about__label">TEAM MEMBERS</span>
            </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Who Are We Section -->
    <section class="about">
      <img 
        src={aboutBgSrc.src} 
        alt="Pirate ship sailing" 
        class="about__bg-image" 
        draggable="false"
      />
      <div class="about__content-wrapper">
        <div class="about__content">
          <h2 class="about__title">WHO ARE WE?</h2>
          <div class="about__text">
            <p>Castaway Studiosooned on the island of game development and loving every minute of it. We craft games with attitude, humor, and a healthy disregard for the rules. Whether you're here for epic adventures, questionable jokes, or just to see what happens when you mix rum with code, you're in the right place.</p>
            <p class="about__highlight">We don't just make games—we throw a party on every screen.</p>
          </div>
        </div>
    </div>
    </section>
    
    <DevelopmentPath client:load />
    
    <!-- Ready to Create Section -->
    <section class="cta">
      <h2 class="section-title">Ready to Create Something?</h2>
      <a href="/contactUs" class="cta-button">Get in Touch</a>
    </section>
  </main>
</Layout>